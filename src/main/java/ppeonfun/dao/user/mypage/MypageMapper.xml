<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="ppeonfun.dao.user.mypage.MypageDao">
 	<resultMap type="ppeonfun.dto.MyPage" id="MyPage">
		<result column="my_no" property="myNo"/>
		<result column="my_origin_name" property="myOriginName"/>
		<result column="my_stored_name" property="myStoredName"/>
		<result column="my_introduce" property="myIntroduce"/>
		<result column="my_size" property="mySize"/>
		<result column="my_content_type" property="myContentType"/>
  	</resultMap>
  	
 	
 	<select id="selectMypageBymNo" resultMap="MyPage" parameterType="int">
 	SELECT my_no, my_origin_name, my_stored_name
 			, my_introduce, my_size, my_content_type
 	FROM mypage
 	WHERE my_no= #{mNo}
 	</select>
 	
 	<update id="updateMypage" parameterType="MyPage">
 	UPDATE mypage
 	SET my_origin_name = #{myOriginName}, my_stored_name = #{myStoredName}
 		, my_size = #{mySize}, my_content_type = #{myContentType}
 	WHERE my_no = #{myNo}
 	</update>
 	
 	<update id="updateMypageIntro" parameterType="MyPage">
 	UPDATE mypage
 	SET my_introduce = #{myIntroduce}
 	WHERE my_no = #{myNo}
 	</update>
 	
 	<select id="selectMemberByNo" parameterType="int" resultType="Member">
 	SELECT m_phone, m_email, m_bank, m_account, m_post, m_address, m_detail_address
 	FROM member
 	WHERE m_no = #{mNo}
 	</select>

 	<update id="updateMemberInfo" parameterType="Member">
 	UPDATE member
 	SET m_nick = #{mNick}, m_email = #{mEmail}, m_phone = #{mPhone}
 		, m_bank = #{mBank}, m_account = #{mAccount}, m_post = #{mPost}
 		, m_address = #{mAddress}, m_detail_address = #{mDetailAddress}
 	WHERE m_no = #{mNo}
 	</update>
 	
 	<select id="selectMsocialByNo" parameterType="int" resultType="String">
 	SELECT m_social
 	FROM member
 	WHERE m_no = #{mNo}
 	</select>
 	
 	<select id="selectCntmPw" parameterType="Member" resultType="int">
 	SELECT COUNT(*)
 	FROM member
 	WHERE m_no = #{mNo} AND m_password = #{mPassword}
 	</select>
 	
 	<update id="updatePwByNo" parameterType="Member">
 	UPDATE member
 	SET m_password = #{mPassword}
 	WHERE m_no = #{mNo}
 	</update>
 	
 	<select id="selectmEmailBymNo" parameterType="int" resultType="String">
 	SELECT m_email
 	FROM member
 	WHERE m_no = #{mNo}
 	</select>
 	
 	<select id="selectCntProjectBySupport" parameterType="int" resultType="int">
	SELECT COUNT(*)
	FROM (payment PM
    	INNER JOIN project PJ
        	ON PM.p_no = PJ.p_no
	)
	WHERE PM.m_no = #{mNo}
    	AND PM.paym_state = 'Y'
   		AND PJ.p_progress_state = 'Y'
 	</select>
 	
 	<select id="selectCntProjectByMaker" parameterType="int" resultType="int">
	SELECT COUNT(*)
	FROM project
	WHERE m_no = #{mNo}
    	AND p_progress_state = 'Y'
 	</select>
 	
 	<update id="updateDeleteStateBymNo" parameterType="int">
 	UPDATE member
 	SET m_delete_state = 'Y'
 	WHERE m_no = #{mNo}
 	</update>
 	
 	<select id="selectCntPayment" parameterType="int" resultType="int">
	SELECT COUNT(*) 
	FROM payment
	WHERE m_no = #{mNo} AND paym_state = 'Y'
 	</select>
 	
 	<select id="selectMyFundingListAll" parameterType="hashmap" resultType="hashmap">
	SELECT * FROM (
	    SELECT rownum rnum, RES.* FROM (
	        SELECT 
	            PM.paym_amount
	            , PJ.p_no, PJ.p_name, PJ.p_progress_state
	            , I.i_category, I.i_stored_name, I.i_end_date
	        FROM (
	        	payment PM
		        INNER JOIN project PJ
		            ON PM.p_no = PJ.p_no
		        INNER JOIN information I
		            ON PM.p_no = I.p_no
		    )
	        WHERE PM.m_no = #{mNo} AND PM.paym_state = 'Y'
	        ORDER BY PM.paym_no DESC
	    ) RES
	) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
 	</select>
 	
 	<select id="selectPaymSumByNo" parameterType="int" resultType="hashmap">
	SELECT i_category as category, sum(paym_amount) as count 
	FROM (payment 
    	INNER JOIN information
		ON information.p_no = payment.p_no)
	WHERE m_no = #{mNo}
	GROUP BY i_category
 	</select>
 	
 	<select id="selectPaybSumByNo" parameterType="int" resultType="hashmap">
	SELECT i_category as category, sum(paym_amount) as count 
	FROM (payment 
    	INNER JOIN information
		ON information.p_no = payment.p_no
    	INNER JOIN payback
		ON payback.paym_no = payment.paym_no)
	WHERE m_no = #{mNo}
	GROUP BY i_category
 	</select>
 	
 	<select id="selectCntFavorite" parameterType="int" resultType="int">
 	SELECT COUNT(*)
 	FROM favorite
 	WHERE m_no = #{mNo}
 	ORDER BY fav_no DESC
 	</select>
 	
 	<select id="selectAllMyFavoriteList" parameterType="hashmap" resultType="hashmap">
	SELECT * FROM (
	    SELECT rownum rnum, RES.* FROM (
	        SELECT 
	        	F.p_no
	        	, PJ.p_name, PJ.p_progress_state
	            , I.i_category, I.i_stored_name, I.i_end_date
	        FROM (
	        	favorite F
		        INNER JOIN project PJ
		            ON F.p_no = PJ.p_no
		        INNER JOIN information I
		            ON F.p_no = I.p_no
		    )
	        WHERE F.m_no = #{mNo}
	        ORDER BY F.fav_no DESC
	    ) RES
	) WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
 	</select>
 </mapper>  
    
  